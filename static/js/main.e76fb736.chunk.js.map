{"version":3,"sources":["constants/chains.js","constants/coins.js","ethereumFunctions.js","network.js","NavBar/MenuItems.js","NavBar/NavBar.js","CoinSwapper/CoinField.js","CoinSwapper/CoinButton.js","CoinSwapper/CoinDialog.js","Components/LoadingButton.js","Components/wrongNetwork.js","CoinSwapper/CoinSwapper.js","Liquidity/SwitchButton.js","Liquidity/LiquidityFunctions.js","Liquidity/LiquidityDeployer.js","Liquidity/RemoveLiquidity.js","Liquidity/Liquidity.js","App.js","reportWebVitals.js","index.js"],"names":["networks","ChainId","routerAddress","Map","set","primaryProvider","ethers","providers","JsonRpcProvider","backupProvider","COINS","chains","ROUTER","require","ERC20","FACTORY","PAIR","async","getNetwork","provider","arguments","length","undefined","Error","getActiveProvider","chainId","getDecimals","token","decimals","then","result","catch","error","console","log","getBalanceAndSymbol","accountAddress","address","signer","weth_address","coins","_coins$","balance","symbol","abbr","_coins$2","balanceRaw","getBalance","utils","formatEther","Contract","abi","tokenDecimals","balanceOf","parseFloat","formatUnits","handleApprovalError","code","message","toLowerCase","includes","fetchReserves","address1","address2","pair","activeProvider","coin1","coin2","coin1Decimals","coin2Decimals","reservesRaw","getReserves","results","token0","token1","Number","err","factory","pairAddress","getPair","liquidityTokens_BN","liquidityTokens","toPrecision","theme","createTheme","palette","primary","main","contrastText","secondary","Web3Provider","props","isConnected","setConnected","useState","network","useRef","account","chainID","router","weth","loadCoins","useCallback","current","get","setupConnection","window","ethereum","getSigner","request","method","getAccount","getRouter","wplsAddress","WPLS","getWeth","getFactory","localStorage","setItem","useEffect","storedAccount","getItem","storedChainId","parseInt","handleAccountsChanged","accounts","removeItem","handleChainChanged","on","removeListener","_jsx","ThemeProvider","children","SnackbarProvider","maxSnack","_jsxs","render","onClick","style","cursor","color","textDecoration","MenuItems","title","url","cName","NavBar","Component","constructor","state","clicked","className","map","item","index","Link","to","useStyles","makeStyles","container","padding","spacing","minHeight","backgroundColor","COLORS","borderRadius","borderColor","borderWidth","borderStyle","container_input","marginLeft","textAlign","container_blank","grid","height","fab","zIndex","input","typography","h5","width","inputBase","inputBase2","RemoveLiquidityField1","classes","value","onChange","activeField","Grid","direction","justifyContent","alignItems","xs","Fab","size","variant","ExpandMoreIcon","InputBase","placeholder","disabled","root","RemoveLiquidityField2","CoinField","button","paddingTop","paddingBottom","display","coinName","opacity","coinImage","marginRight","CoinButton","coinAbbr","imageURI","other","ButtonBase","focusRipple","src","alt","Typography","styles","dialogContainer","titleSection","titleText","alignSelf","hr","margin","paddingLeft","paddingRight","coinList","overflowY","coinContainer","marginTop","overflow","DialogTitle","withStyles","onClose","MuiDialogTitle","disableTypography","alignContent","IconButton","CloseIcon","DialogActions","MuiDialogActions","CoinDialog","open","others","setAddress","React","setError","exit","Dialog","fullWidth","maxWidth","paper","TextField","e","target","helperText","InputProps","InputLabelProps","coin","name","Button","autoFocus","submit","doesTokenExist","wrapper","position","progress","green","top","left","LoadingButton","loading","valid","success","fail","type","CircularProgress","WrongNetwork","paperContainer","border","boxShadow","transition","switchButton","marginBottom","overflowWrap","footer","CoinSwapper","enqueueSnackbar","useSnackbar","dialog1Open","setDialog1Open","dialog2Open","setDialog2Open","wrongNetworkOpen","setwrongNetworkOpen","setCoin1","setCoin2","reserves","setReserves","field1Value","setField1Value","field2Value","setField2Value","setLoading","switchFields","reverse","handleChange","field1","formatReserve","reserve","onTokenSelected","isCoin1","data","isNaN","amountIn","routerContract","token1Decimals","token2","token2Decimals","amount_out","getAmountsOut","parseUnits","String","getAmountOut","amount","toFixed","coinTimeout","setTimeout","clearTimeout","Container","Paper","fontFamily","fontSize","SwapVerticalCircleIcon","numeral","format","isButtonEnabled","parsedInput1","parsedInput2","swap","tokens","time","Math","floor","Date","now","deadline","BigNumber","from","amountInToken1","allowance","lt","approvalTx","approve","wait","toString","approvalError","amountOut","callStatic","amountOutError","tx","JSON","stringify","swapExactETHForTokens","swapExactTokensForETH","swapExactTokensForTokens","receipt","swapError","errorMessage","swapTokens","autoHideDuration","LoopIcon","SwitchButton","setDeploy","changeStyles","K","document","getElementById","ButtonGroup","id","text","maxwidth","quote","amount1","reserve1","reserve2","quoteMintLiquidity","amountA","amountB","_reserveA","_reserveB","totalSupply","reserveA","reserveB","_totalSupply","valueA","valueB","sqrt","min","background","values","buttonIcon","LiquidityDeployer","setLiquidityTokens","liquidityOut","setLiquidityOut","oldField1Value","oldField2Value","field2","formatBalance","toLocaleString","minimumFractionDigits","maximumFractionDigits","NaN","amountADesired","amountBDesired","amountBOptimal","amountAOptimal","quoteAddLiquidity","networksigner","deploy","amount2","amount1min","amount2min","amountIn1","amountIn2","amount1Min","amount2Min","currentAllowance1","currentAllowance2","approvalPromises","push","Promise","all","updatedAllowance1","updatedAllowance2","gte","addLiquidityETH","addLiquidity","AccountBalanceIcon","LiquidityRemover","tokensOut","setTokensOut","parsedInput","liquidity","feeOn","feeTo","_kLast","kLast","adjustedReserveA","adjustedReserveB","feeLiquidity","quoteRemoveLiquidity","remove","liquidity_tokens","Getliquidity","approveTx","removeLiquidityETH","removeLiquidityPLS","removeLiquidity","ArrowDownwardIcon","Liquidity","deploy_or_remove","App","NarBar","Route","exact","path","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","HashRouter","StrictMode"],"mappings":"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","file":"static/js/main.e76fb736.chunk.js","sourcesContent":["import { ethers} from \"ethers\";\nexport const networks = [369];\n\nexport const ChainId = {\n  MAINNET: 369,\n};\n\nexport const routerAddress = new Map();\nrouterAddress.set(ChainId.MAINNET, \"0xA88293f625eDD66b4E98C4368D532f47634eCA7D\");\n\nexport const primaryProvider = new ethers.providers.JsonRpcProvider(\"https://rpc-pulsechain.g4mm4.io\");\nexport const backupProvider = new ethers.providers.JsonRpcProvider(\"https://rpc.pulsechain.com\");\n","import * as chains from './chains';\n\nconst MAINNETCoins = [\n  \n {\n        \"name\": \"DexTop\",\n        \"abbr\": \"DEX\",\n        \"address\": \"0x57953dAC106a4cDa11D90273b1B9D59E169533c0\",\n        \n        \n        \"imageURI\": \"./exe.gif\"\n      },\n      {\n        \"name\": \"HEX\",\n        \"abbr\": \"HEX\",\n        \"address\": \"0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39\",\n        \n        \n        \"imageURI\": \"./0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39.png\"\n      },\n      {\n        \"name\": \"Kilobyte Token\",\n        \"abbr\": \"KB\",\n        \"address\": \"0xaC55cd59F4d97c50FBeC9b0812352e15BC5d2e59\",\n        \n        \n        \"imageURI\": \"https://bafybeihhucklcvdhalyxsuqfw6ujbxgu52xkf72dnmivvhw5mrw4e4vuse.ipfs.nftstorage.link/kilobyte-logo.FaNPUq7F.png\"\n      },\n      {\n        \"name\": \"USD Coin from Ethereum\",\n        \"abbr\": \"USDC\",\n        \"address\": \"0x15D38573d2feeb82e7ad5187aB8c1D52810B1f07\",\n        \n       \n        \"imageURI\": \"./0x15D38573d2feeb82e7ad5187aB8c1D52810B1f07.png\"\n      },\n      {\n        \"name\": \"PulseX\",\n        \"abbr\": \"PLSX\",\n        \"address\": \"0x95B303987A60C71504D99Aa1b13B4DA07b0790ab\",\n        \n        \n        \"imageURI\": \"./0x95B303987A60C71504D99Aa1b13B4DA07b0790ab.png\"\n      },\n      {\n        \"name\": \"DAI\",\n        \"abbr\": \"pDAI\",\n        \"address\": \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n        \n        \n        \"imageURI\": \"./0x6B175474E89094C44Da98b954EedeAC495271d0F.png\"\n      },\n      {\n        \"name\": \"A Free Game Of DUME\",\n        \"abbr\": \"DUME\",\n        \"address\": \"0x63bf22258aB005b9FB5087A2349701618BedbdA0\",\n        \n        \n        \"imageURI\": \"https://bafybeibn76otrocalt2dyn6vmpp4jbqnbixvf67jigb6qsc54me5tlcibu.ipfs.nftstorage.link/dume.jpg\"\n      },\n      {\n        \"name\": \"ZKZX\",\n        \"abbr\": \"ZKZX\",\n        \"address\": \"0x319e55Be473C77C35316651995C048a415219604\",\n        \n        \n        \"imageURI\": \"https://bafybeid2ty7afisdonqqizomkdexckm4irzvcve5xus6s32snhpwa2lc5i.ipfs.nftstorage.link/ryATaxZ-_400x400.jpg\"\n      },\n      {\n        \"name\": \"RH Louis Vuitton Bag\",\n        \"abbr\": \"BAG\",\n        \"address\": \"0x9966bDcbe018540A974B44CEcCD61E369aD6640D\",\n        \n       \n        \"imageURI\": \"https://bafybeidd5uofksyfcmcn3upm5hnfbwwalebkq55j7bt2i3ak7cct27qwei.ipfs.nftstorage.link/baggss.jpg\"\n      },\n      {\n        \"name\": \"Louis The Duck\",\n        \"abbr\": \"Duck\",\n        \"address\": \"0x88BdfdBbb5f6DeF9fA1B20eeFDB7FbF41Eb789CB\",\n        \n        \n        \"imageURI\": \"https://dd.dexscreener.com/ds-data/tokens/pulsechain/0x88bdfdbbb5f6def9fa1b20eefdb7fbf41eb789cb.png?size=lg\"\n      },\n      {\n        \"name\": \"Monsters INC\",\n        \"abbr\": \"MIKE\",\n        \"address\": \"0xa8DCD0EB29f6F918289b5C14634C1B5F443Af826\",\n        \n        \n        \"imageURI\": \"https://bafybeih3jylfpixy5yhwt3uwrjpgswi2r2g3ucengaxwggds525i5a2xvm.ipfs.nftstorage.link/miceee.jpg\"\n      },\n      {\n        \"name\": \"Twerk\",\n        \"abbr\": \"TWERK\",\n        \"address\": \"0xe11a9e0298fBB1248611956db3C8FF556DC1DdbD\",\n        \n        \n        \"imageURI\": \"https://img1.wsimg.com/isteam/ip/dcec858a-2035-46e8-9352-add1264d1581/Logo-Twerk-PNG.png/:/rs=w:200,h:200,cg:true,m/cr=w:200,h:200/qt=q:95\"\n      },\n      {\n        \"name\": \"A Free Slice Of Pizza\",\n        \"abbr\": \"PIZZA\",\n        \"address\": \"0x3e7ae951d9925E6e5DE6140a99B90c3259445c9B\",\n        \n        \n        \"imageURI\": \"https://bafybeibupusgei6q3y3bljvoqcab5h4l2nrrxesysvkfv5eokffprsluiu.ipfs.nftstorage.link/GGKTILKWIAAMrCs%20(1).jpg\"\n      },\n      {\n        \"name\": \"RH_404\",\n        \"abbr\": \"RH404\",\n        \"address\": \"0x749ccf4c4308490F3c395De897F58e091090B461\",\n        \n        \n        \"imageURI\": \"https://bafybeicg6upmg2qvwkpw3b7y5jmado6hj52p6rut44zt3jyx6oobgrfagy.ipfs.nftstorage.link/eF8WyGue_400x400.jpg\"\n      },\n      {\n        \"name\": \"Caviar\",\n        \"abbr\": \"CAVIAR\",\n        \"address\": \"0x8C5eB0F7007c374D6FE14627259B99a5e9613C84\",\n        \n        \n        \"imageURI\": \"https://bafybeialmxubiduarkagecfrh4tqh24d7to5s4jixh4avcvmqjogwxqzyq.ipfs.nftstorage.link/photo_2024-02-12_17-38-12.jpg\"\n      },\n      {\n        \"name\": \"Hex Orange Address\",\n        \"abbr\": \"HOA\",\n        \"address\": \"0x7901a3569679AEc3501dbeC59399F327854a70fe\",\n        \n        \n        \"imageURI\": \"https://tokens.dextop.pro/tokens/0x7901a3569679AEc3501dbeC59399F327854a70fe.png\"\n      },\n      {\n        \"name\": \"Jeet\",\n        \"abbr\": \"JEET\",\n        \"address\": \"0x6801fa8Ece9e6e021D2C925d2243ae3890Eb95A4\",\n        \n        \n        \"imageURI\": \"https://bafybeicdur5sbbax5qarg7drvb6qdq7e7tbn2wknfwqmhhogodtm4ny574.ipfs.nftstorage.link/photo_2024-02-12_17-40-46.jpg\"\n      },\n      {\n        \"name\": \"Degen Anonymous\",\n        \"abbr\": \"ANON\",\n        \"address\": \"0x075F7F657AEAD0e698EDb4E0A47d1DEF869536B4\",\n        \n        \n        \"imageURI\": \"https://bafybeihaflhk73gqke5j3mjewfz2k2vf3zar4f2cqpyscw2vhwym7xhfke.ipfs.nftstorage.link/photo_2024-01-28_14-45-37.jpg\"\n      },\n      {\n        \"name\": \"USDL\",\n        \"abbr\": \"USDL\",\n        \"address\": \"0x0dEEd1486bc52aA0d3E6f8849cEC5adD6598A162\",\n        \n        \n        \"imageURI\": \"https://tokens.dextop.pro/tokens/usdl.png\"\n      },\n      {\n        \"name\": \"Good Old Fashioned Un Registered Security\",\n        \"abbr\": \"GOFURS\",\n        \"address\": \"0x54f667dB585b7B10347429C72c36c8B59aB441cb\",\n        \n        \n        \"imageURI\": \"https://bafybeido32w46z4rmxrs4ygrc6wfuxqe6oqsdscpe4prsolpj5jmm5gpra.ipfs.nftstorage.link/asdf346243576%20(1).png\"\n      },\n      {\n        \"name\": \"WcDonalds\",\n        \"abbr\": \"WcDon\",\n        \"address\": \"0xa3C21B3a0be628F27e4617FBC2D702DD0bA24b28\",\n        \n        \n        \"imageURI\": \"https://bafybeieu526tgmqv7oyq6s6h4voswruaenb6volnycjpvfkhm3p4jszr6i.ipfs.nftstorage.link/wcdondalds%20(1).png\"\n      },\n      \n      \n      {\n        \"name\": \"Kirk\",\n        \"abbr\": \"KIRK\",\n        \"address\": \"0x267b2b0047C2D2Cd6467fa353b9caCEE0dF946D0\",\n        \n        \n        \"imageURI\": \"https://bafybeibyt25x7and4astijvwcwveb3zxxeihoot4awfi4vyde2grg7fjny.ipfs.nftstorage.link/kirklogo.png\"\n      },\n      \n      {\n        \"name\": \"Wrapped BTC from Ethereum\",\n        \"abbr\": \"WBTC\",\n        \"address\": \"0xb17D901469B9208B17d916112988A3FeD19b5cA1\",\n        \n        \n        \"imageURI\": \"./0xb17D901469B9208B17d916112988A3FeD19b5cA1.png\"\n      },\n      {\n        \"name\": \"Dai Stablecoin from Ethereum\",\n        \"abbr\": \"DAI\",\n        \"address\": \"0xefD766cCb38EaF1dfd701853BFCe31359239F305\",\n        \n        \n        \"imageURI\": \"https://bafybeieuwqfuduzmuuczq5ue5b7ktitrmr73xjtx7nsyezckn4xd5pyce4.ipfs.dweb.link/0xefD766cCb38EaF1dfd701853BFCe31359239F305.png\"\n      },\n      {\n        \"name\": \"Hex Bear\",\n        \"abbr\": \"HXB\",\n        \"address\": \"0x009a8670E74E1dda3E449E93A9308e5977949967\",\n        \n        \n        \"imageURI\": \"https://i.ibb.co/q9pk1dX/hxb.png\"\n      },\n      {\n        \"name\": \"Internet Money\",\n        \"abbr\": \"IM\",\n        \"address\": \"0xBBcF895BFCb57d0f457D050bb806d1499436c0CE\",\n        \n        \n        \"imageURI\": \"https://internetmoney.io/_next/image?url=https%3A%2F%2Fd295q1lbtarn4h.cloudfront.net%2Fimages%2Fim-token-small.webp&w=64&q=75\"\n      },\n      \n      {\n        \"name\": \"Tetra\",\n        \"abbr\": \"TETRA\",\n        \"address\": \"0xAeC4C07537B03E3E62fc066EC62401Aed5Fdd361\",\n        \n        \n        \"imageURI\": \"https://static.wixstatic.com/media/90aff7_f58b35dfa0194d38a7ba8672a0dc901b~mv2.png/v1/fill/w_335,h_335,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/TETRA.png\"\n      },\n      {\n        \"name\": \"Incentive Token\",\n        \"abbr\": \"INC\",\n        \"address\": \"0x2fa878Ab3F87CC1C9737Fc071108F904c0B0C95d\",\n        \n        \n        \"imageURI\": \"https://tokens.app.pulsex.com/images/tokens/0x2fa878Ab3F87CC1C9737Fc071108F904c0B0C95d.png\"\n      },\n      {\n        \"name\": \"ApinPulse\",\n        \"abbr\": \"APC\",\n        \"address\": \"0xBb101431d43b0E1fc31f000bf96826794806e0b4\",\n        \n        \n        \"imageURI\": \"https://cdn.dexscreener.com/https://assets.coingecko.com/coins/images/31094/large/m_gH0JjI_400x400.jpg?1696529926\"\n      },\n      {\n        \"name\": \"IMPLS Token\",\n        \"abbr\": \"IMPLS\",\n        \"address\": \"0x5f63BC3d5bd234946f18d24e98C324f629D9d60e\",\n        \n        \n        \"imageURI\": \"https://bafybeiaskey4a6rmteasvjse2lkr6qudnt6jpp3xlxubiq6swzg2u2d5rq.ipfs.nftstorage.link/photo_2024-02-10_14-06-57.jpg\"\n      },\n      {\n        \"name\": \"Pepe Token\",\n        \"abbr\": \"PEPE\",\n        \"address\": \"0x6982508145454Ce325dDbE47a25d4ec3d2311933\",\n        \n        \n        \"imageURI\": \"https://tokens.app.pulsex.com/images/tokens/0x6982508145454Ce325dDbE47a25d4ec3d2311933.png\"\n      },\n      {\n        \"name\": \"Hedron Smores Address Token\",\n        \"abbr\": \"HSA\",\n        \"address\": \"0xe1d32634516926F0A440ef42b8fCD9fefe71ADBE\",\n        \n        \n        \"imageURI\": \"https://dd.dexscreener.com/ds-data/tokens/pulsechain/0xe1d32634516926f0a440ef42b8fcd9fefe71adbe.png?size=lg\"\n      },\n      \n      {\n        \"name\": \"Dev Token\",\n        \"abbr\": \"DEV\",\n        \"address\": \"0x165ad6cD6Db243AB0b52a1D808c4146EB2b07fCC\",\n        \n        \n        \"imageURI\": \"https://bafybeiaraiw3hrgqvfj2rr3ckg5w2h35ikbueyo7vpc2rauqglt46zr7ae.ipfs.nftstorage.link/photo_2024-02-01_16-54-17.jpg\"\n      },\n      {\n        \"name\": \"Hocus Pocus\",\n        \"abbr\": \"HOC\",\n        \"address\": \"0xd22E78C22D7E77229d60cc9fC57b0E294F54488E\",\n        \n        \n        \"imageURI\": \"https://bafybeie2rxp334ndy5g6ioxtyu4g7d7wzloxgxahmxadnt23piooftqrey.ipfs.nftstorage.link/HOC.png\"\n      },\n      {\n        \"name\": \"Mega\",\n        \"abbr\": \"MEGA\",\n        \"address\": \"0x8eDb13CE75562056DFf2221D193557Fb4A05770D\",\n        \n        \n        \"imageURI\": \"https://tokens.dextop.pro/tokens/mega.jpg\"\n      },\n      {\n        \"name\": \"The Grays Currency\",\n        \"abbr\": \"pTGC\",\n        \"address\": \"0x94534eeee131840b1c0f61847c572228bdfdde93\",\n        \n        \n        \"imageURI\": \"https://tokens.dextop.pro/tokens/grays.jpg\"\n      },\n      {\n        \"name\": \"Richard's Only Brother\",\n        \"abbr\": \"ROB\",\n        \"address\": \"0x1c2766F5949A4aA5d4cf0439067051135ffc1b28\",\n        \n        \n        \"imageURI\": \"https://i.ibb.co/Y3990fG/rob12.png\"\n      }\n]\n\n\nconst COINS = new Map();\nCOINS.set(chains.ChainId.MAINNET, MAINNETCoins);\n\nexport default COINS\n","import { Contract, ethers, BigNumber } from \"ethers\";\nimport * as chains from \"./constants/chains\";\nimport COINS from \"./constants/coins\";\nimport { primaryProvider, backupProvider, routerAddress, ChainId } from \"./constants/chains\";\nimport { useSnackbar } from \"notistack\";\nimport numeral from 'numeral';\nconst ROUTER = require(\"./build/UniswapV2Router02.json\");\nconst ERC20 = require(\"./build/ERC20.json\");\nconst FACTORY = require(\"./build/IUniswapV2Factory.json\");\nconst PAIR = require(\"./build/IUniswapV2Pair.json\");\n\n\n\nexport function getProvider(useWallet = false) {\n  if (useWallet && typeof window.ethereum !== \"undefined\") {\n    return new ethers.providers.Web3Provider(window.ethereum);\n  }\n  if (primaryProvider) return primaryProvider;\n  if (backupProvider) return backupProvider;\n  \n  throw new Error(\"No available provider.\");\n}\n\nfunction getActiveProvider() {\n  if (primaryProvider) return primaryProvider;\n  if (backupProvider) return backupProvider;\n  \n  throw new Error(\"No available provider.\");\n}\n\n\n\n// Returns network chainId for provided provider\nexport async function getNetwork(provider = getActiveProvider()) {\n  const network = await provider.getNetwork();\n  return network.chainId;\n}\n\nexport function getRouter(address, signer) {\n  return new Contract(address, ROUTER.abi, signer);\n}\n\nexport async function checkNetwork(provider) {\n  const chainId = getNetwork(provider);\n  if (chains.networks.includes(chainId)){\n    return true\n  }\n  return false;\n}\n\nexport function getWeth(address, signer) {\n  return new Contract(address, ERC20.abi, signer);\n}\n\nexport function getFactory(address, signer) {\n  return new Contract(address, FACTORY.abi, signer);\n}\n\nexport async function getAccount() {\n  const accounts = await window.ethereum.request({\n    method: \"eth_requestAccounts\",\n  });\n\n  return accounts[0];\n}\n\n\n\n//This function checks if a ERC20 token exists for a given address\n//    `address` - The Ethereum address to be checked\n//    `signer` - The current signer\nexport function doesTokenExist(address, signer) {\n  try {\n    return new Contract(address, ERC20.abi, signer);\n  } catch (err) {\n    return false;\n  }\n}\n\nexport async function getDecimals(token) {\n  const decimals = await token.decimals().then((result) => {\n      return result;\n    }).catch((error) => {\n      console.log('No tokenDecimals function for this token, set to 0');\n      return 0;\n    });\n    return decimals;\n}\n\n// This function returns an object with 2 fields: `balance` which container's the account's balance in the particular token,\n// and `symbol` which is the abbreviation of the token name. To work correctly it must be provided with 4 arguments:\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `address` - An Ethereum address of the token to check for (either a token or PLS)\n//    `provider` - The current provider\n//    `signer` - The current signer\n// Returns balance and symbol of a token or PLS using active providers\n\nexport async function getBalanceAndSymbol(\n  accountAddress,\n  address,\n  provider,\n  signer,\n  weth_address,\n  coins\n) {\n  try {\n    // If no account address is provided, return default coin info\n    if (!accountAddress) {\n      return {\n        balance: \"0.00\", // Default balance\n        symbol: coins[0]?.abbr || \"PLS\", // Fallback to \"PLS\"\n      };\n    }\n\n    if (address === weth_address) {\n      // Fetch native PLS balance\n      const balanceRaw = await provider.getBalance(accountAddress);\n      return {\n        balance: ethers.utils.formatEther(balanceRaw),\n        symbol: coins[0]?.abbr || \"PLS\", // Fallback to \"PLS\" if coins array is undefined or empty\n      };\n    } else {\n      // Fetch ERC20 token balance\n      const token = new Contract(address, ERC20.abi, signer);\n      const tokenDecimals = await getDecimals(token);\n      const balanceRaw = await token.balanceOf(accountAddress);\n      \n      // Ensure balance is retrieved properly\n      if (balanceRaw == null) {\n        throw new Error(\"Unable to retrieve balance from the token contract.\");\n      }\n\n      const symbol = await token.symbol();\n      return {\n        balance: parseFloat(ethers.utils.formatUnits(balanceRaw, tokenDecimals)),\n        symbol: symbol,\n      };\n    }\n  } catch (error) {\n    console.error(\"The getBalanceAndSymbol function encountered an error!\", error);\n    return false;\n  }\n}\n\n\n\n\n// This function swaps two particular tokens / PLS, it can handle switching from PLS to ERC20 token, ERC20 token to PLS, and ERC20 token to ERC20 token.\n// No error handling is done, so any issues can be caught with the use of .catch()\n// To work correctly, there needs to be 7 arguments:\n//    `address1` - An Ethereum address of the token to trade from (either a token or PLS)\n//    `address2` - An Ethereum address of the token to trade to (either a token or PLS)\n//    `amount` - A float or similar number representing the value of address1's token to trade\n//    `routerContract` - The router contract to carry out this trade\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `signer` - The current signer\n\n\nexport async function swapTokens(\n  address1,\n  address2,\n  amount,\n  routerContract,\n  accountAddress\n) {\n  const signer = new ethers.providers.Web3Provider(window.ethereum).getSigner();\n  const tokens = [address1, address2];\n  const time = Math.floor(Date.now() / 1000) + 200000;\n  const deadline = ethers.BigNumber.from(time);\n\n  const token1 = new ethers.Contract(address1, ERC20.abi, signer);\n  const token1Decimals = await getDecimals(token1);\n  const amountInToken1 = ethers.utils.parseUnits(amount, token1Decimals);\n\n  try {\n    const currentAllowanceToken1 = await token1.allowance(accountAddress, routerContract.address);\n\n    // Approve token1 if needed\n    if (currentAllowanceToken1.lt(amountInToken1)) {\n      console.log('Insufficient allowance for token1. Attempting approval...');\n      const approvalTx = await token1.approve(routerContract.address, amountInToken1);\n\n      try {\n        await approvalTx.wait();\n        console.log(`Approved ${token1.address} transfer for ${amountInToken1.toString()}`);\n      } catch (approvalError) {\n        console.error('Error during approval transaction:', approvalError.message);\n        return { success: false, message: handleApprovalError(approvalError), error: approvalError };\n      }\n    } else {\n      console.log(`Sufficient allowance for ${token1.address} transfer exists.`);\n    }\n\n    // Attempt to fetch amounts out\n    let amountOut;\n    try {\n      amountOut = await routerContract.callStatic.getAmountsOut(amountInToken1, tokens);\n    } catch (amountOutError) {\n      console.error('Error fetching amounts out:', amountOutError.message);\n      return { success: false, message: \"Failed to retrieve swap amounts\", error: amountOutError };\n    }\n\n    const wplsAddress = await routerContract.WPLS();\n    let tx;\n\n    try {\n      console.log(`Executing swap with parameters: ${JSON.stringify({\n        address1, address2, amountOut, accountAddress, deadline, amountInToken1\n      })}`);\n\n      if (address1 === wplsAddress) {\n        tx = await routerContract.swapExactETHForTokens(\n          amountOut[1],\n          tokens,\n          accountAddress,\n          deadline,\n          { value: amountInToken1 }\n        );\n      } else if (address2 === wplsAddress) {\n        tx = await routerContract.swapExactTokensForETH(\n          amountInToken1,\n          amountOut[1],\n          tokens,\n          accountAddress,\n          deadline\n        );\n      } else {\n        tx = await routerContract.swapExactTokensForTokens(\n          amountInToken1,\n          amountOut[1],\n          tokens,\n          accountAddress,\n          deadline\n        );\n      }\n\n      const receipt = await tx.wait();\n      console.log('Transaction successful. Transaction receipt:', receipt);\n      return { success: true, message: \"Transaction Successful\", receipt };\n\n    } catch (swapError) {\n      console.error('Error during swap transaction:', swapError.message);\n      let errorMessage;\n      try {\n        errorMessage = handleSwapError(swapError); // Ensure this returns a string\n      } catch (e) {\n        console.error('Error handling swap error:', e.message);\n        errorMessage = \"Error handling failed\"; // Fallback message\n      }\n      return { success: false, message: errorMessage, error: swapError };\n    }\n\n  } catch (error) {\n    console.error('Unexpected error in swapTokens function:', error.message);\n    return { success: false, message: error.message || \"An unexpected error occurred\", error };\n  }\n}\n\n// Helper function to handle approval errors\nfunction handleApprovalError(error) {\n  if (error.code === 4001 || error.message.toLowerCase().includes(\"user rejected\")) {\n    return \"Approval Rejected by User\";\n  } else if (error.message.includes(\"revert\")) {\n    return \"Approval Transaction Reverted\";\n  }\n  return \"Approval Failed\";\n}\n\n// Helper function to handle swap errors\nfunction handleSwapError(error) {\n  if (error.code === 4001 || error.message.toLowerCase().includes(\"user rejected\")) {\n    return \"Transaction Rejected by User\";\n  } else if (error.message.includes(\"revert\")) {\n    return \"Transaction Reverted\";\n  }\n  return \"Transaction Failed\";\n}\n\n\n\n\n//This function returns the conversion rate between two token addresses\n//    `address1` - An Ethereum address of the token to swaped from (either a token or AUT)\n//    `address2` - An Ethereum address of the token to swaped to (either a token or AUT)\n//    `amountIn` - Amount of the token at address 1 to be swaped from\n//    `routerContract` - The router contract to carry out this swap\nexport async function getAmountOut(\n  address1,\n  address2,\n  amountIn,\n  routerContract,\n  signer\n) {\n  try {\n    const token1 = new Contract(address1, ERC20.abi, signer);\n    const token1Decimals = await getDecimals(token1);\n\n    const token2 = new Contract(address2, ERC20.abi, signer);\n    const token2Decimals = await getDecimals(token2);\n\n    const values_out = await routerContract.getAmountsOut(\n      ethers.utils.parseUnits(String(amountIn), token1Decimals),\n      [address1, address2]\n    );\n    const amount_out = values_out[1]*10**(-token2Decimals);\n    console.log('amount out: ', amount_out)\n    return Number(amount_out);\n  } catch {\n    return false;\n  }\n}\n\n\n\n\n\n\n\nexport async function fetchReserves(address1, address2, pair, provider) {\n  try {\n    // Ensure address1, address2, and pair are defined\n    if (!address1 || !address2 || !pair) {\n      console.log(\"Invalid addresses or pair. Waiting for both tokens and pair to be defined.\");\n      return [0, 0];\n    }\n\n    const activeProvider = provider || primaryProvider || backupProvider;\n\n    // Create contracts for the tokens\n    const coin1 = new Contract(address1, ERC20.abi, activeProvider);\n    const coin2 = new Contract(address2, ERC20.abi, activeProvider);\n\n    // Get decimals for each token\n    const coin1Decimals = await getDecimals(coin1);\n    const coin2Decimals = await getDecimals(coin2);\n\n    // Get reserves from the pair contract\n    const reservesRaw = await pair.getReserves();\n\n    // Determine correct order of reserves based on token0/token1 ordering in pair\n    const results = [\n      (await pair.token0()) === address1 ? reservesRaw[0] : reservesRaw[1],\n      (await pair.token1()) === address2 ? reservesRaw[1] : reservesRaw[0],\n    ];\n\n    // Scale each reserve to the correct decimal place\n    return [\n      Number(ethers.utils.formatUnits(results[0], coin1Decimals)),\n      Number(ethers.utils.formatUnits(results[1], coin2Decimals)),\n    ];\n  } catch (err) {\n    console.log(\"Error fetching reserves!\");\n    console.log(err);\n    return [0, 0];\n  }\n}\n\n\n// This function returns the reserves stored in a the liquidity pool between the token of address1 and the token\n// of address2, as well as the liquidity tokens owned by accountAddress for that pair.\n//    `address1` - An Ethereum address of the token to trade from (either a token or AUT)\n//    `address2` - An Ethereum address of the token to trade to (either a token or AUT)\n//    `factory` - The current factory\n//    `signer` - The current signer\nexport async function getReserves(\n  address1,\n  address2,\n  factory,\n  signer,\n  accountAddress\n) {\n  try {\n    if (!address1 || !address2) {\n      console.log(\"Address1 or Address2 is undefined. Please check the token addresses.\");\n      return [0, 0, 0];\n    }\n\n    console.log(`Fetching pair address for tokens: ${address1} and ${address2}`);\n    const pairAddress = await factory.getPair(address1, address2);\n\n    if (pairAddress === '0x0000000000000000000000000000000000000000') {\n      console.log(\"No reserves yet, pair address is empty.\");\n      return [0, 0, 0];\n    }\n\n    console.log(`Pair address found: ${pairAddress}`);\n    const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n    // Fetch raw reserves\n    const reservesRaw = await fetchReserves(address1, address2, pair, signer);\n    \n    // Get user's liquidity token balance in the pair\n    const liquidityTokens_BN = await pair.balanceOf(accountAddress);\n    const liquidityTokens = Number(\n      ethers.utils.formatEther(liquidityTokens_BN)\n    );\n\n    return [\n      reservesRaw[0].toPrecision(12),\n      reservesRaw[1].toPrecision(12),\n      liquidityTokens,\n    ];\n  } catch (err) {\n    console.log(\"Error in getReserves function:\", err);\n    return [0, 0, 0];\n  }\n}\n\n\n\n","import { useEffect, useState, useRef, useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { SnackbarProvider } from \"notistack\";\nimport {\n  getAccount,\n  getFactory,\n  getRouter,\n  getNetwork,\n  getWeth,\n} from \"./ethereumFunctions\";\nimport COINS from \"./constants/coins\";\nimport * as chains from \"./constants/chains\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#008938\",\n      contrastText: \"#000\",\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#000\",\n    },\n  },\n});\n\nconst Web3Provider = (props) => {\n  const [isConnected, setConnected] = useState(false);\n  const network = useRef({\n    provider: null,\n    signer: null,\n    account: null,\n    coins: [],\n    chainID: null,\n    router: null,\n    factory: null,\n    weth: null,\n  });\n\n  // Function to load coins regardless of wallet connection\n  const loadCoins = useCallback(() => {\n    const chainId = network.current.chainID;\n    if (chainId) {\n      const coins = COINS.get(chainId) || []; // Load coins for the current chain\n      network.current.coins = coins; // Set coins in the network ref\n    }\n  }, []);\n\n  // Function to set up the connection to the Ethereum network\n  const setupConnection = useCallback(async () => {\n    if (!window.ethereum) {\n      console.log(\"No wallet provider found.\");\n      return;\n    }\n\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      const account = await getAccount();\n      const chainId = await getNetwork(provider);\n\n      // Update network object\n      network.current.provider = provider;\n      network.current.signer = signer;\n      network.current.account = account;\n      network.current.chainID = chainId;\n\n      if (chains.networks.includes(chainId)) {\n        // Load coins immediately\n        loadCoins(); // Load coins even if wallet is not connected\n\n        // Set router, WETH, and factory addresses based on chainId\n        const router = getRouter(chains.routerAddress.get(chainId), signer);\n        const wplsAddress = await router.WPLS();\n        const weth = getWeth(wplsAddress, signer);\n        const factoryAddress = await router.factory();\n        const factory = getFactory(factoryAddress, signer);\n\n        // Update network object with retrieved values\n        network.current.router = router;\n        network.current.coins[0].address = wplsAddress;\n        network.current.weth = weth;\n        network.current.factory = factory;\n\n        // Save connection state to localStorage\n        localStorage.setItem('account', account);\n        localStorage.setItem('chainId', chainId);\n\n        setConnected(true);\n      } else {\n        console.log(\"Connected to the wrong network.\");\n        setConnected(false);\n      }\n    } catch (error) {\n      console.error(\"Error setting up connection:\", error);\n      setConnected(false);\n    }\n  }, [loadCoins]);\n\n  // Effect to load coins on mount\n  useEffect(() => {\n    loadCoins();\n  }, [loadCoins]);\n\n  // Effect to check for existing connection state on mount\n  useEffect(() => {\n    const storedAccount = localStorage.getItem('account');\n    const storedChainId = localStorage.getItem('chainId');\n\n    if (storedAccount && storedChainId) {\n      // Set the account and chain ID back to the network ref\n      network.current.account = storedAccount;\n      network.current.chainID = parseInt(storedChainId, 10);\n      setupConnection(); // Try to set up the connection again\n    }\n  }, [setupConnection]);\n\n  // Effect to listen for wallet connection changes\n  useEffect(() => {\n    const handleAccountsChanged = (accounts) => {\n      if (accounts.length === 0) {\n        console.log(\"Please connect to MetaMask.\");\n        setConnected(false);\n        localStorage.removeItem('account');\n        localStorage.removeItem('chainId');\n      } else {\n        setupConnection(); // Trigger connection if accounts change\n      }\n    };\n\n    const handleChainChanged = () => {\n      setupConnection(); // Trigger connection if chain changes\n    };\n\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", handleAccountsChanged);\n      window.ethereum.on(\"chainChanged\", handleChainChanged);\n    }\n\n    // Cleanup event listeners on unmount\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n        window.ethereum.removeListener(\"chainChanged\", handleChainChanged);\n      }\n    };\n  }, [setupConnection]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SnackbarProvider maxSnack={3}>\n        <div>\n          {props.render(network.current)}\n          {!isConnected && (\n            <span\n              onClick={setupConnection}\n              style={{ cursor: 'pointer', color: '#008938', textDecoration: 'underline' }}\n            >\n            </span>\n          )}\n        </div>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default Web3Provider;\n","export const MenuItems = [\n  {\n    title: \"Swap\",\n    url: \"/\",\n    cName: \"nav-links\",\n  },\n  {\n    title: \"Liquidity\",\n    url: \"/liquidity\",\n    cName: \"nav-links\",\n  },\n];\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MenuItems } from \"./MenuItems\";\nimport \"./NavBar.css\";\n\nclass NavBar extends Component {\n  state = { clicked: false };\n\n  render() {\n    return (\n      <nav>\n        <div className=\"Title\">\n       \n          <h3 className=\"navbar-logo\">\n            \n            \n          </h3>\n        </div>\n\n        <div className=\"NavbarItems\">\n          <ul className={`nav-menu`}>\n            {MenuItems.map((item, index) => {\n              return (\n                <li key={index}>\n                  <Link className={\"nav-links\"} to={item.url}>\n                    {item.title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Fab, Grid, InputBase, makeStyles } from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(1),\n    minHeight: \"80px\",\n    backgroundColor: COLORS.green[900],\n    borderRadius: theme.spacing(2),\n    borderColor: COLORS.green[400],\n    borderWidth: \"2px\",\n    borderStyle: \"solid\",\n  },\n  container_input: {\n    padding: theme.spacing(1),\n    minHeight: \"68px\",\n    backgroundColor: COLORS.green[900],\n    borderRadius: theme.spacing(2),\n    borderColor: COLORS.green[400],\n    borderWidth: \"1px\",\n    borderStyle: \"solid\",\n    marginLeft: \"50%\",\n    textAlign: \"right\",\n  },\n  container_blank: {\n    padding: theme.spacing(1),\n    minHeight: \"80px\",\n    borderRadius: theme.spacing(2),\n  },\n  grid: {\n    height: \"60px\",\n  },\n  fab: {\n    zIndex: \"0\",\n  },\n  input: {\n    ...theme.typography.h5,\n    width: \"100%\",\n  },\n  inputBase: {\n    textAlign: \"right\",\n    color: COLORS.green[50],\n  },\n  inputBase2: {\n    textAlign: \"right\",\n    color: COLORS.green[50],\n  },\n}));\n\nCoinField.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  symbol: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  activeField: PropTypes.bool.isRequired,\n};\n\nexport function RemoveLiquidityField1(props) {\n  // This component is used to selecting a coin and entering a value, the props are explained below:\n  //      onClick - (string) => void - Called when the button is clicked\n  //      symbol - string - The text displayed on the button\n  //      value - string - The value of the text field\n  //      onChange - (e) => void - Called when the text field changes\n  //      activeField - boolean - Whether text can be entered into this field or not\n\n  const classes = useStyles();\n  const { onClick, symbol, value, onChange, activeField } = props;\n  return (\n    <div className={classes.container_blank}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        className={classes.grid}\n      >\n        {/* Button */}\n        <Grid item xs={3}>\n        <Fab\n  size=\"small\"\n  variant=\"extended\"\n  onClick={onClick}\n  className={classes.fab}\n  style={{ borderRadius: \"8px\" }} // Adjust as needed\n>\n  {symbol}\n  <ExpandMoreIcon />\n</Fab>\n\n        </Grid>\n        {/* Text Field */}\n        <Grid item xs={9}>\n          <InputBase\n            value={value}\n            onChange={onChange}\n            placeholder=\"0.0\"\n            disabled={!activeField}\n            classes={{\n              root: classes.container_input,\n              input: classes.inputBase,\n            }}\n          />\n        </Grid>\n        {/* </div> */}\n      </Grid>\n    </div>\n  );\n}\n\nexport function RemoveLiquidityField2(props) {\n  // This component is used to selecting a coin and entering a value, the props are explained below:\n  //      onClick - (string) => void - Called when the button is clicked\n  //      symbol - string - The text displayed on the button\n  //      value - string - The value of the text field\n  //      onChange - (e) => void - Called when the text field changes\n  //      activeField - boolean - Whether text can be entered into this field or not\n\n  const classes = useStyles();\n  const { onClick, symbol } = props;\n\n  return (\n    <div className={classes.container_blank}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        className={classes.grid}\n      >\n        {/* Button */}\n        <Grid item xs={3}>\n          <Fab\n  size=\"small\"\n  variant=\"extended\"\n  onClick={onClick}\n  className={classes.fab}\n  style={{ borderRadius: \"8px\" }} // Adjust as needed\n>\n  {symbol}\n  <ExpandMoreIcon />\n</Fab>\n\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default function CoinField(props) {\n  // This component is used to selecting a token and entering a value, the props are explained below:\n  //      onClick - (string) => void - Called when the button is clicked\n  //      symbol - string - The text displayed on the button\n  //      value - string - The value of the text field\n  //      onChange - (e) => void - Called when the text field changes\n  //      activeField - boolean - Whether text can be entered into this field or not\n\n  const classes = useStyles();\n  const { onClick, symbol, value, onChange, activeField } = props;\n\n  return (\n    <div className={classes.container}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        className={classes.grid}\n      >\n        {/* Button */}\n        <Grid item xs={3}>\n          <Fab\n  size=\"small\"\n  variant=\"extended\"\n  onClick={onClick}\n  className={classes.fab}\n  style={{ \n    borderRadius: \"8px\", \n    backgroundColor: \"#203951\", \n    color: \"white\" \n  }} \n>\n  {symbol}\n  <ExpandMoreIcon />\n</Fab>\n\n        </Grid>\n\n        {/* Text Field */}\n        <Grid item xs={9}>\n          <InputBase\n            value={value}\n            onChange={onChange}\n            placeholder=\"0.0\"\n            disabled={!activeField}\n            classes={{ root: classes.input, input: classes.inputBase }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ButtonBase, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    \"&:hover, &$focusVisible\": {\n      backgroundColor: COLORS.green[900],\n      color: COLORS.blue[100],\n      \n    },\n  },\n  coinName: {\n    opacity: 0.6,\n    \n  },\n  coinImage: {\n    width: 30, // Adjust the image width as needed\n    height: 30, // Adjust the image height as needed\n    marginRight: theme.spacing(3), // Adjust the margin as needed\n  },\n}));\n\nCoinButton.propTypes = {\n  coinName: PropTypes.string.isRequired,\n  coinAbbr: PropTypes.string.isRequired,\n  imageURI: PropTypes.string, // Define imageURI as a prop\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default function CoinButton(props) {\n  const { coinName, coinAbbr, imageURI, onClick, ...other } = props;\n  const classes = useStyles();\n\n  return (\n    <ButtonBase focusRipple className={classes.button} onClick={onClick}>\n      <Grid container alignItems=\"center\">\n        {imageURI && (\n          <Grid item>\n            <img src={imageURI} alt={`${coinName} Logo`} className={classes.coinImage} />\n          </Grid>\n        )}\n        <Grid item style={{ textAlign: \"left\" }}>\n          <Typography variant=\"h6\">{coinAbbr}</Typography>\n          <Typography variant=\"body2\" className={classes.coinName}>\n            {coinName}\n          </Typography>\n        </Grid>\n      </Grid>\n    </ButtonBase>\n  );\n}\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  Grid,\n  IconButton,\n  makeStyles,\n  TextField,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CoinButton from \"./CoinButton\";\nimport { doesTokenExist } from \"../ethereumFunctions\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst styles = (theme) => ({\n  dialogContainer: {\n    borderRadius: theme.spacing(2),\n    backgroundColor: \"rgba(37, 44, 69)\", // Adjusted for transparency\n    color: \"white\",\n  },\n  titleSection: {\n    padding: theme.spacing(2),\n  },\n  titleText: {\n    alignSelf: \"center\",\n    color: COLORS.green[50], // Changed title text color to light green\n  },\n  hr: {\n    margin: 0,\n    backgroundColor: COLORS.green[50], // Changed horizontal line color to light green\n    height: \"2px\", // Increased line thickness\n  },\n  address: {\n    paddingLeft: theme.spacing(2.5),\n    paddingRight: theme.spacing(2.5),\n    paddingBottom: theme.spacing(2),\n    \"& .MuiOutlinedInput-root\": {\n      backgroundColor: \"#004d40\", // Dark green background\n      color: \"white\", // White text color\n      \"& fieldset\": {\n        borderColor: \"#00ff00\", // Green border color\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#00ff00\", // Green border on hover\n      },\n    },\n    \"& .MuiInputBase-input\": {\n      color: \"white\", // White text color in input\n    },\n    \"& .MuiFormHelperText-root\": {\n      color: \"red\", // Error message in red\n    },\n  },\n  coinList: {\n    height: \"315px\",\n    overflowY: \"scroll\",\n    color: COLORS.green[50], // Light green text color for the coin list\n    backgroundColor: COLORS.grey[800],\n  },\n  coinContainer: {\n    paddingLeft: theme.spacing(1.5),\n    paddingRight: theme.spacing(0.5),\n    paddingTop: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    overflow: \"hidden\",\n  },\n});\n\n// Custom useStyles hook\nconst useStyles = makeStyles(styles);\n\n// Custom DialogTitle component\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle\n      disableTypography\n      className={classes.titleSection}\n      {...other}\n    >\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignContent=\"center\"\n      >\n        <Typography variant=\"h6\" className={classes.titleText}>\n          {children}\n        </Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" onClick={onClose}>\n            <CloseIcon style={{ color: COLORS.green[50] }} /> {/* Close icon color */}\n          </IconButton>\n        ) : null}\n      </Grid>\n    </MuiDialogTitle>\n  );\n});\n\n// Custom DialogActions component\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n    backgroundColor: \"rgba(37, 44, 69)\", // Dialog actions background with transparency\n  },\n}))(MuiDialogActions);\n\nCoinDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  coins: PropTypes.array.isRequired,\n};\n\nexport default function CoinDialog(props) {\n  const classes = useStyles();\n  const { onClose, open, coins, signer, ...others } = props;\n\n  const [address, setAddress] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  const submit = () => {\n    if (doesTokenExist(address, signer)) {\n      exit(address);\n    } else {\n      setError(\"This address is not valid\");\n    }\n  };\n\n  const exit = (value) => {\n    setError(\"\");\n    setAddress(\"\");\n    onClose(value);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => exit(undefined)}\n      fullWidth\n      maxWidth=\"sm\"\n      classes={{ paper: classes.dialogContainer }}\n    >\n      <DialogTitle onClose={() => exit(undefined)}>Select Token</DialogTitle>\n\n      <hr className={classes.hr} />\n\n      <div className={classes.coinContainer}>\n  <Grid container direction=\"column\" spacing={2} alignContent=\"center\">\n    <TextField\n      value={address}\n      onChange={(e) => setAddress(e.target.value)}\n      variant=\"outlined\"\n      placeholder=\"Paste Token Address\"\n      error={error !== \"\"}\n      helperText={error}\n      fullWidth\n      className={classes.address}\n      InputProps={{\n        style: {\n          backgroundColor: \"#004d40\", \n          color: \"white\", \n        },\n      }}\n      InputLabelProps={{\n        style: {\n          color: \"white\", \n        },\n      }}\n    />\n\n          <hr className={classes.hr} />\n\n          <Grid item className={classes.coinList}>\n            <Grid container direction=\"column\">\n              {coins.map((coin, index) => (\n                <Grid item key={index} xs={28}>\n                  <CoinButton\n                    coinName={coin.name}\n                    coinAbbr={coin.abbr}\n                    imageURI={coin.imageURI}\n                    onClick={() => exit(coin.address)}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n\n      <hr className={classes.hr} />\n\n      <DialogActions>\n  <Button\n    autoFocus\n    onClick={submit}\n    style={{ color: \"white\", backgroundColor: \"transparent\" }} \n  >\n    <b>ENTER</b>\n  </Button>\n</DialogActions>\n\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    margin: 0,\n    position: \"relative\",\n  },\n  progress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function LoadingButton(props) {\n  const classes = useStyles();\n  const { children, loading, valid, success, fail, onClick, ...other } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        disabled={loading || !valid}\n        type=\"submit\"\n        onClick={onClick}\n        {...other}\n      >\n        {children}\n      </Button>\n      {loading && <CircularProgress size={24} className={classes.progress} />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  Grid,\n  IconButton,\n  makeStyles,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = (theme) => ({\n  dialogContainer: {\n    borderRadius: theme.spacing(2),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport default function WrongNetwork(props) {\n\n  const classes = useStyles();\n  const {open} = props;\n  return (\n    <Dialog\n      open={open}\n      fullWidth\n      maxWidth=\"sm\"\n      classes={{ paper: classes.dialogContainer }}\n    >\n      <MuiDialogTitle>Unsupported Network. Switch to pulsechain.</MuiDialogTitle>\n    </Dialog>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport numeral from 'numeral';\nimport {\n  Container,\n  Grid,\n  IconButton,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport SwapVerticalCircleIcon from \"@material-ui/icons/SwapVerticalCircle\";\nimport { useSnackbar } from \"notistack\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nimport {\n  getAccount,\n  getFactory,\n  getProvider,\n  getRouter,\n  getSigner,\n  getNetwork,\n  getAmountOut,\n  getBalanceAndSymbol,\n  getWeth,\n  swapTokens,\n  getReserves,\n} from \"../ethereumFunctions\";\nimport CoinField from \"./CoinField\";\nimport CoinDialog from \"./CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\nimport COINS from \"../constants/coins\";\nimport * as chains from \"../constants/chains\";\n\n\nconst styles = (theme) => ({\n  paperContainer: {\n    backgroundColor: \"rgba(37, 44, 69, 0.8)\",\n    color: COLORS.green[50],\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(1),\n    paddingBottom: theme.spacing(3),\n    border: \"2px solid #00ff00\", \n    boxShadow: \"0 0 8px 4px rgba(0, 174, 255, 0.6)\", \n    transition: \"box-shadow 0.3s ease-in-out\",\n    \"&:hover\": {\n      boxShadow: \"0 0 12px 6px rgba(0, 174, 255, 0.6)\", \n      \n    },\n  },\n  \n  switchButton: {\n    zIndex: 1,\n    margin: \"-16px\",\n    padding: theme.spacing(0.8),\n    backgroundColor: COLORS.green[50],\n  },\n\n  fullWidth: {\n    width: \"100%\",\n  },\n\n  title: {\n    textAlign: \"left\",\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1), \n    \n  },\n\n  hr: {\n    width: \"100%\",\n  },\n\n  balance: {\n    padding: theme.spacing(1),\n    overflowWrap: \"break-word\",\n    textAlign: \"center\",\n  },\n\n  footer: {\n    marginTop: \"285px\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction CoinSwapper(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n  // Stores data about their respective coin\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n  const [field2Value, setField2Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setField1Value(field2Value);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n\n    // If both coins have been selected, and a valid float has been entered which is less than the user's balance, then return true\n    const parsedInput1 = parseFloat(field1Value);\n    const parsedInput2 = parseFloat(field2Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      !isNaN(parsedInput1) &&\n      !isNaN(parsedInput2) &&\n      0 < parsedInput1 &&\n      parsedInput1 <= coin1.balance\n    );\n  };\n\n  const onTokenSelected = (address, isCoin1) => {\n  if (isCoin1) {\n    setDialog1Open(false);\n    if (address === coin2.address) {\n      switchFields();\n    } else if (address) {\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then((data) => {\n        setCoin1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  } else {\n    setDialog2Open(false);\n    if (address === coin1.address) {\n      switchFields();\n    } else if (address) {\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then((data) => {\n        setCoin2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  }\n};\n\n// Update calls to onTokenSelected in your dialogs\nconst onToken1Selected = (address) => onTokenSelected(address, true);\nconst onToken2Selected = (address) => onTokenSelected(address, false);\n\n  const swap = () => {\n    console.log(\"Attempting to swap tokens...\");\n    setLoading(true);\n  \n    swapTokens(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      props.network.router,\n      props.network.account,\n      enqueueSnackbar // Pass the enqueueSnackbar function for error/success messages\n    )\n      .then((result) => {\n        setLoading(false);\n  \n        if (result.success) {\n          // If the transaction was successful, clear the input to prevent accidental re-transfers\n          setField1Value(\"\");\n          enqueueSnackbar(\"Transaction Successful\", { variant: \"success\" });\n        } else {\n          // Handle the case where swapTokens indicates a failure but doesn't throw an error\n          enqueueSnackbar(`Transaction Failed: ${result.message}`, {\n            variant: \"error\",\n            autoHideDuration: 5000,\n          });\n        }\n      })\n      .catch((e) => {\n        setLoading(false);\n        console.error(\"Error in swap function:\", e);\n        enqueueSnackbar(\"Transaction Failed\", {\n          variant: \"error\",\n          autoHideDuration: 5000,\n        });\n      });\n  };\n  \n\n  // The lambdas within these useEffects will be called when a particular dependency is updated. These dependencies\n  // are defined in the array of variables passed to the function after the lambda expression. If there are no dependencies\n  // the lambda will only ever be called when the component mounts. These are very useful for calculating new values\n  // after a particular state change, for example, calculating the new exchange rate whenever the addresses\n  // of the two coins change.\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get Reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address) {\n      getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(\n        (data) => setReserves(data)\n      );\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.router, props.network.signer]);\n\n  // This hook is called when either of the state variables `field1Value` `coin1.address` or `coin2.address` change.\n  // It attempts to calculate and set the state variable `field2Value`\n  // This means that if the user types a new value into the conversion box or the conversion rate changes,\n  // the value in the output box will change.\n  useEffect(() => {\n    if (isNaN(parseFloat(field1Value))) {\n      setField2Value(\"\");\n    } else if (parseFloat(field1Value) && coin1.address && coin2.address) {\n      getAmountOut(coin1.address, coin2.address, field1Value, props.network.router, props.network.signer).then(\n        (amount) => setField2Value(amount.toFixed(7))\n      ).catch(e => {\n        console.log(e);\n        setField2Value(\"NA\");\n      })\n    } else {\n      setField2Value(\"\");\n    }\n  }, [field1Value, coin1.address, coin2.address]);\n\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n  useEffect(() => {\n    const coinTimeout = setTimeout(() => {\n      console.log('props: ', props);\n      console.log(\"Checking balances...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => setReserves(data));\n      }\n\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin1({\n              ...coin1,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin2({\n              ...coin2,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n    }, 30000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Dialog Windows */}\n      <CoinDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        props={props.network.signer}\n      />\n      <CoinDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <WrongNetwork\n        open={wrongNetworkOpen}\n        />\n\n      {/* Coin Swapper */}\n      <Container maxWidth=\"xs\">\n        <Paper className={classes.paperContainer}>\n        <Grid container alignItems=\"center\">\n  <Grid item>\n    <div style={{ borderRadius: '20%', overflow: 'hidden', width: '50px', height: '50px', marginRight: '10px', marginLeft: '10px', marginTop: '10px',  }}>\n      <img src=\"exe.gif\" alt=\"DexTop Icon\" style={{ width: '100%', height: 'auto' }} />\n    </div>\n    \n  </Grid>\n  <Grid item>\n  <h5 className=\"navbar-logo\"> DexTop 1% \n</h5>\n\n  </Grid>\n</Grid>\n<br></br>\n\n<Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n  <Grid item xs={12} className={classes.fullWidth}>\n    <CoinField\n      activeField={true}\n      value={field1Value}\n      onClick={() => setDialog1Open(true)}\n      onChange={handleChange.field1}\n      symbol={\n        <span style={{ fontFamily: \"'Press Start 2P'\", fontSize: \"12px\"  }}>\n          {coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n        </span>\n      }\n    />\n  </Grid>\n\n  <IconButton onClick={switchFields} className={classes.switchButton}>\n    <SwapVerticalCircleIcon fontSize=\"medium\" />\n  </IconButton>\n\n  <Grid item xs={12} className={classes.fullWidth}>\n    <CoinField\n      activeField={false}\n      value={field2Value}\n      onClick={() => setDialog2Open(true)}\n      symbol={\n        <span style={{ fontFamily: \"'Press Start 2P'\", fontSize: \"12px\"  }}>\n          {coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n        </span>\n      }\n    />\n  </Grid>\n\n\n\n            <hr className={classes.hr} />\n\n            {/* Balance Display */}\n            <Typography variant=\"h6\">Your Balances</Typography>\n<Grid container direction=\"row\" justifyContent=\"space-between\">\n  <Grid item xs={6}>\n    <Typography variant=\"body1\" className={classes.balance}>\n      {coin1.balance !== undefined ? `${numeral(coin1.balance).format('0,0.000')} ${coin1.symbol}` : \"0.00\"}\n    </Typography>\n  </Grid>\n  <Grid item xs={6}>\n    <Typography variant=\"body1\" className={classes.balance}>\n      {coin2.balance !== undefined ? `${numeral(coin2.balance).format('0,0.000')} ${coin2.symbol}` : \"0.00\"}\n    </Typography>\n  </Grid>\n</Grid>\n\n\n\n            <hr className={classes.hr} />\n\n            {/* Reserves Display */}\n<Typography variant=\"h6\">Reserves</Typography>\n<Grid container direction=\"row\" justifyContent=\"space-between\">\n  <Grid item xs={6}>\n    <Typography variant=\"body1\" className={classes.balance}>\n      {formatReserve(numeral(reserves[0]).format('0,0.000'), coin1.symbol)}\n    </Typography>\n  </Grid>\n  <Grid item xs={6}>\n    <Typography variant=\"body1\" className={classes.balance}>\n      {formatReserve(numeral(reserves[1]).format('0,0.000'), coin2.symbol)}\n    </Typography>\n  </Grid>\n</Grid>\n\n            <hr className={classes.hr} />\n\n            <LoadingButton\n              loading={loading}\n              valid={isButtonEnabled()}\n              success={false}\n              fail={false}\n              onClick={swap}\n            >\n              <LoopIcon />\n              Swap\n            </LoadingButton>\n          </Grid>\n        </Paper>\n      </Container>\n\n    {/* NOT USED\n  container\n  className={classes.footer}\n  direction=\"column\"\n  justifyContent=\"center\"\n  alignItems=\"center\"\n  spacing={2}\n  style={{ maxWidth: '100%', margin: '0 auto'}} \n>\n  <Grid item>\n    <p style={{ textAlign: 'center', color: 'white' }}>\n      <a href=\"https://dextop.pro/\" style={{ color: 'white' }}>DEXTOP</a>\n    </p>\n  </Grid>\n  <Grid item>\n    <p style={{ textAlign: 'center', color: 'white' }}>\n      <a href=\"https://internetmoney.io/\" style={{ color: 'white' }}>IM WALLET</a>\n    </p>\n  </Grid>\n</Grid> */}\n  </div>\n  );\n}\n\nexport default CoinSwapper;","import React from \"react\";\nimport { ButtonGroup, Button } from \"@material-ui/core\";\n\nexport default function SwitchButton(props) {\n  const { setDeploy } = props;\n\n  const changeStyles = (K) => {\n    if (K === true) {\n      let add_button = document.getElementById(\"add-button\");\n      add_button.style.backgroundColor = \"#008938\";\n\n      let remove_button = document.getElementById(\"remove-button\");\n      remove_button.style.backgroundColor = \"#9e9e9e\";\n    } else {\n      let remove_button = document.getElementById(\"remove-button\");\n      remove_button.style.backgroundColor = \"#008938\";\n\n      let add_button = document.getElementById(\"add-button\");\n      add_button.style.backgroundColor = \"#9e9e9e\";\n    }\n  };\n\n  return (\n    <div>\n  <ButtonGroup size=\"large\" variant=\"contained\">\n    <Button\n      id=\"add-button\"\n      color=\"primary\"\n      text=\"white\"\n      onClick={() => {\n        setDeploy(true);\n        changeStyles(true);\n      }}\n      style={{\n        fontFamily: \"'Press Start 2P'\",\n        fontSize: \"12px\",\n        maxwidth: \"50%\", \n      }}\n    >\n      Add Liquidity\n    </Button>\n\n    <Button\n      id=\"remove-button\"\n      color=\"secondary\"\n      text=\"white\"\n      onClick={() => {\n        setDeploy(false);\n        changeStyles(false);\n      }}\n      style={{\n        fontFamily: \"'Press Start 2P'\",\n        fontSize: \"12px\", \n        maxwidth: \"50%\",\n      }}\n    >\n      Remove Liquidity\n    </Button>\n  </ButtonGroup>\n</div>\n\n\n  );\n}\n","import { Contract, ethers } from \"ethers\";\nimport { fetchReserves, getDecimals } from \"../ethereumFunctions\";\n\nconst ERC20 = require(\"../build/ERC20.json\");\nconst PAIR = require(\"../build/IUniswapV2Pair.json\");\n\n// Function used to add Liquidity to any pair of tokens or token-AUT\n// To work correctly, there needs to be 9 arguments:\n//    `address1` - An Ethereum address of the coin to add from (either a token or AUT)\n//    `address2` - An Ethereum address of the coin to add to (either a token or AUT)\n//    `amount1` - A float or similar number representing the value of address1's coin to add\n//    `amount2` - A float or similar number representing the value of address2's coin to add\n//    `amount1Min` - A float or similar number representing the minimum of address1's coin to add\n//    `amount2Min` - A float or similar number representing the minimum of address2's coin to add\n//    `routerContract` - The router contract to carry out this trade\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `provider` - The current provider\n//    `signer` - The current signer\nexport async function addLiquidity(\n  address1,\n  address2,\n  amount1,\n  amount2,\n  amount1min,\n  amount2min,\n  routerContract,\n  account,\n  signer\n) {\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const token2 = new Contract(address2, ERC20.abi, signer);\n\n  const token1Decimals = await getDecimals(token1);\n  const token2Decimals = await getDecimals(token2);\n\n  const amountIn1 = ethers.utils.parseUnits(amount1, token1Decimals);\n  const amountIn2 = ethers.utils.parseUnits(amount2, token2Decimals);\n\n  const amount1Min = ethers.utils.parseUnits(amount1min, token1Decimals);\n  const amount2Min = ethers.utils.parseUnits(amount2min, token2Decimals);\n\n  const time = Math.floor(Date.now() / 1000) + 200000;\n  const deadline = ethers.BigNumber.from(time);\n\n  // Check current allowances for both tokens\n  const currentAllowance1 = await token1.allowance(account, routerContract.address);\n  const currentAllowance2 = await token2.allowance(account, routerContract.address);\n\n  // Approve both tokens only if needed\n  if (currentAllowance1.lt(amountIn1) || currentAllowance2.lt(amountIn2)) {\n    const approvalPromises = [];\n\n    if (currentAllowance1.lt(amountIn1)) {\n      approvalPromises.push(token1.approve(routerContract.address, amountIn1));\n    }\n\n    if (currentAllowance2.lt(amountIn2)) {\n      approvalPromises.push(token2.approve(routerContract.address, amountIn2));\n    }\n\n    // Execute both approvals concurrently\n    await Promise.all(approvalPromises);\n  }\n\n  // Check updated allowances after approvals\n  const updatedAllowance1 = await token1.allowance(account, routerContract.address);\n  const updatedAllowance2 = await token2.allowance(account, routerContract.address);\n\n  // Proceed with liquidity addition if both token allowances meet the required amounts\n  if (updatedAllowance1.gte(amountIn1) && updatedAllowance2.gte(amountIn2)) {\n    const wplsAddress = await routerContract.WPLS();\n\n    console.log([\n      address1,\n      address2,\n      amountIn1,\n      amountIn2,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline,\n    ]);\n\n    if (address1 === wplsAddress) {\n      // Eth + Token\n      await routerContract.addLiquidityETH(\n        address2,\n        amountIn2,\n        amount2Min,\n        amount1Min,\n        account,\n        deadline,\n        { value: amountIn1 }\n      );\n    } else if (address2 === wplsAddress) {\n      // Token + Eth\n      await routerContract.addLiquidityETH(\n        address1,\n        amountIn1,\n        amount1Min,\n        amount2Min,\n        account,\n        deadline,\n        { value: amountIn2 }\n      );\n    } else {\n      // Token + Token\n      await routerContract.addLiquidity(\n        address1,\n        address2,\n        amountIn1,\n        amountIn2,\n        amount1Min,\n        amount2Min,\n        account,\n        deadline\n      );\n    }\n  }\n}\n\n\n\n// Function used to remove Liquidity from any pair of tokens or token-AUT\n// To work correctly, there needs to be 9 arguments:\n//    `address1` - An Ethereum address of the coin to recieve (either a token or AUT)\n//    `address2` - An Ethereum address of the coin to recieve (either a token or AUT)\n//    `liquidity_tokens` - A float or similar number representing the value of liquidity tokens you will burn to get tokens back\n//    `amount1Min` - A float or similar number representing the minimum of address1's coin to recieve\n//    `amount2Min` - A float or similar number representing the minimum of address2's coin to recieve\n//    `routerContract` - The router contract to carry out this trade\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `provider` - The current provider\n//    `signer` - The current signer\nexport async function removeLiquidity(\n  address1,\n  address2,\n  liquidity_tokens,\n  amount1min,\n  amount2min,\n  routerContract,\n  account,\n  signer,\n  factory\n) {\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const token2 = new Contract(address2, ERC20.abi, signer);\n\n  const token1Decimals = await getDecimals(token1);\n  const token2Decimals = await getDecimals(token2);\n\n  const Getliquidity = (liquidity_tokens) => {\n    if (liquidity_tokens < 0.001) {\n      return ethers.BigNumber.from(liquidity_tokens * 10 ** 18);\n    }\n    return ethers.utils.parseUnits(String(liquidity_tokens), 18);\n  };\n\n  const liquidity = Getliquidity(liquidity_tokens);\n  console.log('liquidity: ', liquidity);\n\n  const amount1Min = ethers.utils.parseUnits(String(amount1min), token1Decimals);\n  const amount2Min = ethers.utils.parseUnits(String(amount2min), token2Decimals);\n\n  const time = Math.floor(Date.now() / 1000) + 200000;\n  const deadline = ethers.BigNumber.from(time);\n\n  const wplsAddress = await routerContract.WPLS();\n  const pairAddress = await factory.getPair(address1, address2);\n  const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n  const currentAllowance = await pair.allowance(account, routerContract.address);\n\n  // Approve liquidity tokens only if needed\n  if (currentAllowance.lt(liquidity)) {\n    console.log('Approving liquidity tokens...');\n    const approveTx = await pair.approve(routerContract.address, liquidity);\n    await approveTx.wait(); // Wait for approval transaction to be mined\n    console.log('Liquidity tokens approved!');\n  } else {\n    console.log('Sufficient allowance for liquidity tokens exists.');\n  }\n\n  console.log([\n    address1,\n    address2,\n    Number(liquidity),\n    Number(amount1Min),\n    Number(amount2Min),\n    account,\n    deadline,\n  ]);\n\n  if (address1 === wplsAddress) {\n    // Eth + Token\n    await routerContract.removeLiquidityETH(\n      address2,\n      liquidity,\n      amount2Min,\n      amount1Min,\n      account,\n      deadline\n    );\n  } else if (address2 === wplsAddress) {\n    // Token + Eth\n    await routerContract.removeLiquidityPLS(\n      address1,\n      liquidity,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline\n    );\n  } else {\n    // Token + Token\n    await routerContract.removeLiquidity(\n      address1,\n      address2,\n      liquidity,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline\n    );\n  }\n}\n\nconst quote = (amount1, reserve1, reserve2) => {\n  const amount2 = amount1 * (reserve2 / reserve1);\n  return [amount2];\n};\n\n\n// Function used to get a quote of the liquidity addition\n//    `address1` - An Ethereum address of the coin to recieve (either a token or PLS)\n//    `address2` - An Ethereum address of the coin to recieve (either a token or PLS)\n//    `amountA_desired` - The prefered value of the first token that the user would like to deploy as liquidity\n//    `amountB_desired` - The prefered value of the second token that the user would like to deploy as liquidity\n//    `factory` - The current factory\n//    `signer` - The current signer\n\nasync function quoteMintLiquidity(\n  address1,\n  address2,\n  amountA,\n  amountB,\n  factory,\n  signer\n){\n  const MINIMUM_LIQUIDITY = 1000;\n  let _reserveA = 0;\n  let _reserveB = 0;\n  let totalSupply = 0;\n  [_reserveA, _reserveB, totalSupply] = await factory.getPair(address1, address2).then(async (pairAddress) => {\n    if (pairAddress !== '0x0000000000000000000000000000000000000000'){\n      const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n      const reservesRaw = await fetchReserves(address1, address2, pair, signer); // Returns the reserves already formated as ethers\n      const reserveA = reservesRaw[0];\n      const reserveB = reservesRaw[1];\n    \n      const _totalSupply = await pair.totalSupply();\n      const totalSupply = Number(ethers.utils.formatEther(_totalSupply));\n      return [reserveA, reserveB, totalSupply]\n    } else {\n      return [0,0,0]\n    }\n  });\n\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const token2 = new Contract(address2, ERC20.abi, signer);\n\n  // Need to do all the decimals work to account for 0 decimal numbers\n\n  const token1Decimals = await getDecimals(token1);\n  const token2Decimals = await getDecimals(token2);\n\n  const valueA = amountA*(10**token1Decimals);\n  const valueB = amountB*(10**token2Decimals);\n\n  const reserveA = _reserveA*(10**token1Decimals);\n  const reserveB = _reserveB*(10**token2Decimals);\n\n  if (totalSupply == 0){\n    return Math.sqrt(((valueA * valueB)-MINIMUM_LIQUIDITY))*10**(-18);\n  };\n  \n  return (\n    Math.min(valueA*totalSupply/reserveA, valueB*totalSupply/reserveB)\n  );\n};\n\nexport async function quoteAddLiquidity(\n  address1,\n  address2,\n  amountADesired,\n  amountBDesired,\n  factory,\n  signer\n) {\n\n  const pairAddress = await factory.getPair(address1, address2);\n  const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n  const reservesRaw = await fetchReserves(address1, address2, pair, signer); // Returns the reserves already formated as ethers\n  const reserveA = reservesRaw[0];\n  const reserveB = reservesRaw[1];\n\n  if (reserveA === 0 && reserveB === 0) {\n    const amountOut = await quoteMintLiquidity(\n      address1,\n      address2,\n      amountADesired,\n      amountBDesired,\n      factory,\n      signer);\n    return [\n      amountADesired,\n      amountBDesired,\n      amountOut.toPrecision(8),\n    ];\n  } else {\n    const amountBOptimal = quote(amountADesired, reserveA, reserveB);\n    if (amountBOptimal <= amountBDesired) {\n      const amountOut = await quoteMintLiquidity(\n        address1,\n        address2,\n        amountADesired,\n        amountBOptimal,\n        factory,\n        signer);\n      return [\n        amountADesired,\n        amountBOptimal,\n        amountOut.toPrecision(8),\n      ];\n    } else {\n      const amountAOptimal = quote(\n        amountBDesired,\n        reserveB,\n        reserveA\n      );\n      const amountOut = await quoteMintLiquidity(\n        address1,\n        address2,\n        amountAOptimal,\n        amountBDesired,\n        factory,\n        signer);\n      return [\n        amountAOptimal,\n        amountBDesired,\n        amountOut.toPrecision(8),\n      ];\n    }\n  }\n}\n\nexport async function quoteRemoveLiquidity(\n  address1,\n  address2,\n  liquidity,\n  factory,\n  signer\n) {\n  const pairAddress = await factory.getPair(address1, address2);\n  console.log(\"pair address\", pairAddress);\n  const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n  const reservesRaw = await fetchReserves(address1, address2, pair, signer);\n  const reserveA = reservesRaw[0];\n  const reserveB = reservesRaw[1];\n\n  const feeOn =\n    (await factory.feeTo()) !== 0x0000000000000000000000000000000000000000;\n\n  const _kLast = await pair.kLast();\n  const kLast = Number(ethers.utils.formatEther(_kLast));\n\n  const _totalSupply = await pair.totalSupply();\n  let totalSupply = Number(ethers.utils.formatEther(_totalSupply));\n\n  let adjustedReserveA = reserveA;\n  let adjustedReserveB = reserveB;\n\n  if (feeOn && kLast > 0) {\n    const feeLiquidity =\n      (totalSupply * (Math.sqrt(reserveA * reserveB) - Math.sqrt(kLast))) /\n      (5 * Math.sqrt(reserveA * reserveB) + Math.sqrt(kLast));\n\n    adjustedReserveA = reserveA - (feeLiquidity * reserveA) / totalSupply;\n    adjustedReserveB = reserveB - (feeLiquidity * reserveB) / totalSupply;\n  }\n\n  const Aout = (adjustedReserveA * liquidity) / totalSupply;\n  const Bout = (adjustedReserveB * liquidity) / totalSupply;\n\n  return [liquidity, Aout / 2, Bout / 2];\n}\n","import React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  getBalanceAndSymbol,\n  getReserves,\n} from \"../ethereumFunctions\";\n\nimport { addLiquidity, quoteAddLiquidity } from \"./LiquidityFunctions\";\n\nimport CoinField from \"../CoinSwapper/CoinField\";\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    border: \"2px solid #00ff00\",\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #00441c 30%, #00682a 90%)\",\n    color: \"white\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  values: {\n    width: \"50%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction LiquidityDeployer(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n  // Stores data about their respective coin\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n  const [field2Value, setField2Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Stores the user's balance of liquidity tokens for the current pair\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\n\n  // Used when getting a quote of liquidity\n  const [liquidityOut, setLiquidityOut] = React.useState([0, 0, 0]);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    let oldField1Value = field1Value;\n    let oldField2Value = field2Value;\n\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setField1Value(oldField2Value);\n    setField2Value(oldField1Value);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n    field2: (e) => {\n      setField2Value(e.target.value);\n    },\n  };\n\n  // Turns the account's balance into something nice and readable\nconst formatBalance = (balance, symbol) => {\n  if (balance !== undefined && symbol) {\n    const formattedBalance = parseFloat(balance).toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 });\n    return `${formattedBalance} ${symbol}`;\n  } else {\n    return \"0.0\";\n  }\n};\n\n // Turns the coin's reserves into something nice and readable\nconst formatReserve = (reserve, symbol) => {\n  if (reserve !== undefined && symbol) {\n    const formattedReserve = parseFloat(reserve).toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 });\n    return `${formattedReserve} ${symbol}`;\n  } else {\n    return \"0.0\";\n  }\n};\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput1 = parseFloat(field1Value);\n    const parsedInput2 = parseFloat(field2Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      parsedInput1 !== NaN &&\n      0 < parsedInput1 &&\n      parsedInput2 !== NaN &&\n      0 < parsedInput2 &&\n      parsedInput1 <= coin1.balance &&\n      parsedInput2 <= coin2.balance\n    );\n  };\n\n\n\n  const deploy = () => {\n    console.log(\"Attempting to deploy liquidity...\");\n    setLoading(true);\n\n    addLiquidity(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      field2Value,\n      '0',\n      '0',\n      props.network.router,\n      props.network.account,\n      props.network.signer\n    )\n      .then(() => {\n        setLoading(false);\n\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n        setField1Value(\"\");\n        setField2Value(\"\");\n        enqueueSnackbar(\"Deployment Successful\", { variant: \"success\" });\n      })\n      .catch((e) => {\n        setLoading(false);\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 10000,\n        });\n      });\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = (address) => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = (address) => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address && props.network.account) {\n      getReserves(\n        coin1.address,\n        coin2.address,\n        props.network.factory,\n        props.network.signer,\n        props.network.account\n        ).then(\n        (data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        }\n      );\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\n\n  // This hook is called when either of the state variables `field1Value`, `field2Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity deployment.\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity deployment\");\n\n      quoteAddLiquidity(\n        coin1.address,\n        coin2.address,\n        field1Value,\n        field2Value,\n        props.network.factory,\n        props.network.signer\n      ).then((data) => {\n        // console.log(data);\n        console.log(\"TokenA in: \", data[0]);\n        console.log(\"TokenB in: \", data[1]);\n        console.log(\"Liquidity out: \", data[2]);\n        setLiquidityOut([data[0], data[1], data[2]]);\n      });\n    }\n  }, [coin1.address, coin2.address, field1Value, field2Value, props.network.factory, props.network.signer]);\n\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n  useEffect(() => {\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin1({\n              ...coin1,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin2({\n              ...coin2,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n    }, 10000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Liquidity deployer */}\n      <Typography variant=\"h5\" className={classes.title}></Typography>\n\n      {/* Dialog Windows */}\n      <CoinDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <CoinDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.networksigner}\n      />\n      <WrongNetwork\n        open={wrongNetworkOpen}\n      />\n\n<Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n  <Grid item xs={12} className={classes.fullWidth}>\n    <CoinField\n      activeField={true}\n      value={field1Value}\n      onClick={() => setDialog1Open(true)}\n      onChange={handleChange.field1}\n      symbol={\n        <span style={{ fontFamily: \"'Press Start 2P'\", fontSize: \"12px\" }}>\n          {coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n        </span>\n      }\n    />\n  </Grid>\n\n  <Grid item xs={12} className={classes.fullWidth}>\n    <CoinField\n      activeField={true}\n      value={field2Value}\n      onClick={() => setDialog2Open(true)}\n      onChange={handleChange.field2}\n      symbol={\n        <span style={{ fontFamily: \"'Press Start 2P'\", fontSize: \"12px\" }}>\n          {coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n        </span>\n      }\n    />\n  </Grid>\n</Grid>\n\n\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={4}\n        className={classes.balance}\n      >\n        <hr className={classes.hr} />\n        <Grid\n          container\n          item\n          className={classes.values}\n          direction=\"column\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {/* Balance Display */}\n          <Typography variant=\"h6\">Your Balances</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin1.balance, coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin2.balance, coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Reserves Display */}\n          <Typography variant=\"h6\">Reserves</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[0], coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[1], coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Liquidity Tokens Display */}\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\n          <Grid container direction=\"row\" justifyContent=\"center\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(liquidityTokens, \"DexTop LP\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Paper className={classes.paperContainer}>\n          {/*Red  Display to show the quote */}\n          <Grid\n            container\n            item\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={2}\n            className={classes.fullWidth}\n          >\n            {/* Tokens in */}\n            <Typography variant=\"h6\">Tokens in</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(liquidityOut[0], coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(liquidityOut[1], coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Liquidity Tokens Display */}\n            <Typography variant=\"h6\">Liquidity Pool Tokens Out</Typography>\n            <Grid container direction=\"row\" justifyContent=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatReserve(liquidityOut[2], \"DexTop LP\")}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <hr className={classes.hr} />\n      </Grid>\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <LoadingButton\n          loading={loading}\n          valid={isButtonEnabled()}\n          success={false}\n          fail={false}\n          onClick={deploy}\n        >\n          <AccountBalanceIcon className={classes.buttonIcon} />\n          Deploy\n        </LoadingButton>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LiquidityDeployer;\n","import React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  getBalanceAndSymbol,\n  getReserves,\n} from \"../ethereumFunctions\";\nimport { removeLiquidity, quoteRemoveLiquidity } from \"./LiquidityFunctions\";\nimport {\n  RemoveLiquidityField1,\n  RemoveLiquidityField2,\n} from \"../CoinSwapper/CoinField\";\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #00441c 30%, #00682a 90%)\",\n    color: \"white\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  values: {\n    width: \"50%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction LiquidityRemover(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n\n  // Stores data about their respective coin\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Stores the liquidity tokens balance of the user\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\n\n  // Stores the input and output for the liquidity removal preview\n  const [tokensOut, setTokensOut] = React.useState([0, 0, 0]);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n  };\n\n  // Turns the account's balance into something nice and readable\nconst formatBalance = (balance, symbol) => {\n  if (balance !== undefined && symbol) {\n    const formattedBalance = parseFloat(balance).toLocaleString(undefined, { minimumFractionDigits: 6, maximumFractionDigits: 6 });\n    return `${formattedBalance} ${symbol}`;\n  } else {\n    return \"0.0\";\n  }\n};\n\n // Turns the coin's reserves into something nice and readable\nconst formatReserve = (reserve, symbol) => {\n  if (reserve !== undefined && symbol) {\n    const formattedReserve = parseFloat(reserve).toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 });\n    return `${formattedReserve} ${symbol}`;\n  } else {\n    return \"0.0\";\n  }\n};\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput = parseFloat(field1Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      parsedInput !== NaN &&\n      0 < parsedInput &&\n      parsedInput <= liquidityTokens\n    );\n  };\n\n  const remove = () => {\n    console.log(\"Attempting to remove liquidity...\");\n    setLoading(true);\n\n    removeLiquidity(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      0,\n      0,\n      props.network.router,\n      props.network.account,\n      props.network.signer,\n      props.network.factory\n    )\n      .then(() => {\n        setLoading(false);\n\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n        setField1Value(\"\");\n        enqueueSnackbar(\"Removal Successful\", { variant: \"success\" });\n      })\n      .catch((e) => {\n        setLoading(false);\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 7000,\n        });\n      });\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = (address) => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = (address) => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address && props.network.account) {\n      getReserves(\n        coin1.address,\n        coin2.address,\n        props.network.factory,\n        props.network.signer,\n        props.network.account).then(\n        (data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        }\n      );\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\n\n  \n  // This hook is called when either of the state variables `field1Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity removal.\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity removal\");\n      quoteRemoveLiquidity(\n        coin1.address,\n        coin2.address,\n        field1Value,\n        props.network.factory,\n        props.network.signer\n      ).then((data) => {\n        setTokensOut(data);\n      });\n    }\n  }, [coin1.address, coin2.address, field1Value, props.network.factory, props.network.signer]);\n\n  useEffect(() => {\n    // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n    // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address, props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin1({\n              ...coin1,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin2({\n              ...coin2,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n    }, 10000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Coin Swapper */}\n      <Typography variant=\"h5\" className={classes.title}></Typography>\n\n      {/* Dialog Windows */}\n      <CoinDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <CoinDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <WrongNetwork\n        open={wrongNetworkOpen}\n      />\n\n<Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n  <Grid item xs={12} className={classes.fullWidth}>\n    <RemoveLiquidityField1\n      activeField={true}\n      value={field1Value}\n      onClick={() => setDialog1Open(true)}\n      onChange={handleChange.field1}\n      symbol={\n        <span style={{ fontFamily: \"'Press Start 2P'\", fontSize: \"12px\" }}>\n          {coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n        </span>\n      }\n    />\n  </Grid>\n\n  <Grid item xs={12} className={classes.fullWidth}>\n    <RemoveLiquidityField2\n      activeField={true}\n      onClick={() => setDialog2Open(true)}\n      symbol={\n        <span style={{ fontFamily: \"'Press Start 2P'\", fontSize: \"12px\" }}>\n          {coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n        </span>\n      }\n    />\n  </Grid>\n</Grid>\n\n\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={4}\n        className={classes.balance}\n      >\n        <hr className={classes.hr} />\n        <Grid\n          container\n          item\n          className={classes.values}\n          direction=\"column\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {/* Balance Display */}\n          <Typography variant=\"h6\">Your Balances</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin1.balance, coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin2.balance, coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Reserves Display */}\n          <Typography variant=\"h6\">Reserves</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[0], coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[1], coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Liquidity Tokens Display */}\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\n          <Grid container direction=\"row\" justifyContent=\"center\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(liquidityTokens, \"DexTop LP\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Paper className={classes.paperContainer}>\n          {/*Red  Display to show the quote */}\n          <Grid\n            container\n            item\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={2}\n            className={classes.fullWidth}\n          >\n            {/* Tokens in */}\n            <Typography variant=\"h6\">Liquidity Pool Tokens in</Typography>\n            <Grid container direction=\"row\" justifyContent=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[0], \"DexTop LP\")}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Liquidity Tokens Display */}\n            \n          \n<Typography variant=\"h6\">Tokens Out</Typography>\n<Grid container direction=\"row\" justifyContent=\"space-between\">\n  <Grid item xs={6}>\n    <Typography variant=\"body1\" className={classes.balance}>\n      {Number(tokensOut[1]).toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 })} {coin1.symbol}\n    </Typography>\n  </Grid>\n  <Grid item xs={6}>\n    <Typography variant=\"body1\" className={classes.balance}>\n      {Number(tokensOut[2]).toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 })} {coin2.symbol}\n    </Typography>\n  </Grid>\n</Grid>\n           \n          </Grid>\n        </Paper>\n        <hr className={classes.hr} />\n      </Grid>\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <LoadingButton\n          loading={loading}\n          valid={isButtonEnabled()}\n          success={false}\n          fail={false}\n          onClick={remove}\n        >\n          <ArrowDownwardIcon className={classes.buttonIcon} />\n          Remove\n        </LoadingButton>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LiquidityRemover;\n","import React from \"react\";\nimport {\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\n\nimport SwitchButton from \"./SwitchButton\";\nimport LiquidityDeployer from \"./LiquidityDeployer\";\nimport LiquidityRemover from \"./RemoveLiquidity\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(1),\n    paddingBottom: theme.spacing(3),\n    maxWidth: 700,\n    margin: \"auto\",\n    backgroundColor: \"rgba(37, 44, 69, 0.9)\",\n    color: COLORS.green[200],\n    border: \"2px solid #00ff00\", \n    boxShadow: \"0 0 8px 4px rgba(0, 174, 255, 0.6)\", \n    transition: \"box-shadow 0.3s ease-in-out\",\n    \"&:hover\": {\n      boxShadow: \"0 0 12px 6px rgba(0, 174, 255, 0.6)\", \n      \n    },\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  footer: {\n    marginTop: \"155px\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction Liquidity(props) {\n  const classes = useStyles();\n\n  const [deploy, setDeploy] = React.useState(true);\n\n  const deploy_or_remove = (deploy) => {\n    if (deploy === true) {\n      return <LiquidityDeployer network={props.network}/>;\n    }\n    return <LiquidityRemover network={props.network}/>;\n  };\n\n  return (\n    <div>\n      <Container>\n        <Paper className={classes.paperContainer}>\n          <Typography variant=\"h5\" className={classes.title}>\n            <SwitchButton setDeploy={setDeploy} />\n          </Typography>\n\n          {deploy_or_remove(deploy)}\n        </Paper>\n      </Container>\n\n      <Grid\n        container\n        className={classes.footer}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"flex-end\"\n      >\n      </Grid>\n    </div>\n  );\n}\n\nexport default Liquidity;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport Web3Provider from \"./network\";\nimport NarBar from \"./NavBar/NavBar\";\nimport CoinSwapper from \"./CoinSwapper/CoinSwapper\";\nimport { Route } from \"react-router-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport Liquidity from \"./Liquidity/Liquidity\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#008938\",\n      contrastText: \"#000\",\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#000\",\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <SnackbarProvider maxSnack={3}>\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            render={(network) => (\n              <div>\n                <NarBar />\n                <Route exact path=\"/\">\n                  <CoinSwapper network={network} />\n                </Route>\n\n                <Route exact path=\"/liquidity\">\n                  <Liquidity network={network} />\n                </Route>\n              </div>\n            )}\n          ></Web3Provider>\n        </ThemeProvider>\n      </SnackbarProvider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\"; // Change BrowserRouter to HashRouter\n\nReactDOM.render(\n  <HashRouter> {/* Change BrowserRouter to HashRouter */}\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById(\"root2\")\n);\n\nreportWebVitals();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}